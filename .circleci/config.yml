version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: jmichelsen/bisl_backend
    docker:
      - image: jmichelsen/bisl_backend:latest
      - image: postgres:alpine
        environment:
          POSTGRES_PASSWORD: bisl
          POSTGRES_USER: bisl
          POSTGRES_DB: bisl
jobs:
  build:
    executor: docker-publisher
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.dev
      PSQL_HOST: localhost
      PSQL_NAME: bisl
      PSQL_USERNAME: bisl
      PSQL_PASSWORD: bisl
    working_directory: /code
    steps:
      - run:
         command: |
          apk add --update ca-certificates openssl && update-ca-certificates
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgress && exit 1
      - run:
          name: Run unit tests
          environment:
            DJANGO_SETTINGS_MODULE: config.settings.test
          command: |
            set -ou pipefail
            mkdir /tmp/test-results
            python manage.py test > /tmp/test-results/stdout.txt
  create-package:
    executor: docker-publisher
    steps:
      - run:
          name: Build Docker Image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker Image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
workflows:
  build-master:
    jobs:
      - build
      - create-package:
          filters:
            branches:
              only: master
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: master
